class Solution:
    from sortedcontainers import SortedList
    def avoidFlood(self, rains: List[int]) -> List[int]:
        n = len(rains)
        ans = [-1]*n
        full = {}
        dry = SortedList()
        for i ,lake in enumerate(rains):
            if lake == 0:
                dry.add(i)
                ans[i] = 1
            else:
                if lake in full:
                    prev = full[lake]
                    idx = dry.bisect_right(prev)
                    if idx == len(dry):
                        return []
                    dry_day = dry[idx]
                    ans[dry_day] = lake
                    dry.remove(dry_day)
                full[lake]  = i
        return ans
